{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(username, email, password) {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n  signout() {\n    return this.http.post(AUTH_API + 'signout', {}, httpOptions);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","http","login","username","password","post","register","email","signout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Justin\\Documents\\GitHub\\CS3219_Project\\frontend\\src\\app\\_services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signin',\r\n      { username, password }, httpOptions\r\n    );\r\n  }\r\n\r\n  register(username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signup',\r\n      { username, email, password }, httpOptions\r\n    );\r\n  }\r\n\r\n  signout(): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signout',\r\n      {}, httpOptions\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,QAAQ,GAAG,iCAAiC;AAElD,MAAMC,WAAW,GAAG;EAAEC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;AAAC,CAAE;AAMxF,OAAM,MAAOI,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,QAAQ,EACnB;MAAEO,QAAQ;MAAEC;IAAQ,CAAE,EAAEP,WAAW,CACpC;EACH;EAEAS,QAAQA,CAACH,QAAgB,EAAEI,KAAa,EAAEH,QAAgB;IACxD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,QAAQ,EACnB;MAAEO,QAAQ;MAAEI,KAAK;MAAEH;IAAQ,CAAE,EAAEP,WAAW,CAC3C;EACH;EAEAW,OAAOA,CAAA;IACL,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,SAAS,EACpB,EAAE,EAAEC,WAAW,CAChB;EACH;;SAtBWE,WAAW;;mBAAXA,MAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXb,MAAW;EAAAc,OAAA,EAAXd,MAAW,CAAAe,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}