{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst api = \"http://localhost:8002/questions\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass QuestionService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllQuestions() {\n    return this.http.get(api + '/all', httpOptions);\n  }\n  saveQuestion(question) {\n    let newobj = Object.assign({}, question);\n    return this.http.post(api, newobj, httpOptions);\n  }\n  editQuestion(question) {\n    let newobj = Object.assign({}, question);\n    return this.http.put(api + \"/\" + newobj.questionId.toString(), newobj, httpOptions);\n  }\n  deleteQuestion(id) {\n    return this.http.delete(api + \"/\" + id.toString(), httpOptions);\n  }\n}\n_class = QuestionService;\n_class.ɵfac = function QuestionService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { QuestionService };","map":{"version":3,"names":["HttpHeaders","api","httpOptions","headers","QuestionService","constructor","http","getAllQuestions","get","saveQuestion","question","newobj","Object","assign","post","editQuestion","put","questionId","toString","deleteQuestion","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Hong\\Desktop\\ay2324s1-course-assessment-g40\\frontend\\src\\app\\_services\\question.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst api = \"http://localhost:8002/questions\"\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class QuestionService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllQuestions(): Observable<any> {\r\n    return this.http.get(\r\n      api + '/all', \r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  saveQuestion(question: any): Observable<any> {\r\n    let newobj = Object.assign({}, question);\r\n    return this.http.post(\r\n        api,\r\n        newobj,\r\n        httpOptions\r\n    )\r\n  }\r\n\r\n  editQuestion(question: any): Observable<any> {\r\n    let newobj = Object.assign({}, question);\r\n    return this.http.put(\r\n        api + \"/\" + newobj.questionId.toString(),\r\n        newobj,\r\n        httpOptions\r\n    )\r\n  }\r\n\r\n  deleteQuestion(id: number): Observable<any> {\r\n    return this.http.delete(\r\n      api + \"/\" + id.toString(),\r\n        httpOptions\r\n    )\r\n  }\r\n\r\n}"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,GAAG,GAAG,iCAAiC;AAE7C,MAAMC,WAAW,GAAG;EAAEC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;AAAC,CAAE;AAExF,MAIaI,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAClBP,GAAG,GAAG,MAAM,EACZC,WAAW,CACZ;EACH;EAEAO,YAAYA,CAACC,QAAa;IACxB,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,QAAQ,CAAC;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CACjBb,GAAG,EACHU,MAAM,EACNT,WAAW,CACd;EACH;EAEAa,YAAYA,CAACL,QAAa;IACxB,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,QAAQ,CAAC;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACU,GAAG,CAChBf,GAAG,GAAG,GAAG,GAAGU,MAAM,CAACM,UAAU,CAACC,QAAQ,EAAE,EACxCP,MAAM,EACNT,WAAW,CACd;EACH;EAEAiB,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACd,IAAI,CAACe,MAAM,CACrBpB,GAAG,GAAG,GAAG,GAAGmB,EAAE,CAACF,QAAQ,EAAE,EACvBhB,WAAW,CACd;EACH;;SAjCWE,eAAe;;mBAAfA,MAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAfrB,MAAe;EAAAsB,OAAA,EAAftB,MAAe,CAAAuB,IAAA;EAAAC,UAAA,EAHd;AAAM;SAGPxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}