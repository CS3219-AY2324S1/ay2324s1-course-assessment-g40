{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nconst USER_KEY = 'auth-user';\nexport class StorageService {\n  constructor() {}\n  clean() {\n    window.localStorage.clear();\n    window.sessionStorage.clear();\n  }\n  saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  getUser() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n  isLoggedin() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return true;\n    }\n    return false;\n  }\n}\n_class = StorageService;\n_class.ɵfac = function StorageService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["USER_KEY","StorageService","constructor","clean","window","localStorage","clear","sessionStorage","saveUser","user","removeItem","setItem","JSON","stringify","getUser","getItem","parse","isLoggedin","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Justin\\Documents\\GitHub\\CS3219_Project\\frontend\\src\\app\\_services\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n  constructor() { }\r\n  clean(): void {\r\n    window.localStorage.clear();\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public isLoggedin(): boolean {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n}\r\n"],"mappings":";;AAEA,MAAMA,QAAQ,GAAG,WAAW;AAK5B,OAAM,MAAOC,cAAc;EACzBC,YAAA,GAAgB;EAChBC,KAAKA,CAAA;IACHC,MAAM,CAACC,YAAY,CAACC,KAAK,EAAE;IAC3BF,MAAM,CAACG,cAAc,CAACD,KAAK,EAAE;EAC/B;EAEOE,QAAQA,CAACC,IAAS;IACvBL,MAAM,CAACG,cAAc,CAACG,UAAU,CAACV,QAAQ,CAAC;IAC1CI,MAAM,CAACG,cAAc,CAACI,OAAO,CAACX,QAAQ,EAAEY,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAC/D;EAEOK,OAAOA,CAAA;IACZ,MAAML,IAAI,GAAGL,MAAM,CAACG,cAAc,CAACQ,OAAO,CAACf,QAAQ,CAAC;IACpD,IAAIS,IAAI,EAAE;MACR,OAAOG,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC;;IAEzB,OAAO,EAAE;EACX;EAEOQ,UAAUA,CAAA;IACf,MAAMR,IAAI,GAAGL,MAAM,CAACG,cAAc,CAACQ,OAAO,CAACf,QAAQ,CAAC;IACpD,IAAIS,IAAI,EAAE;MACR,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;SA1BWR,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAiB,OAAA,EAAdjB,MAAc,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}