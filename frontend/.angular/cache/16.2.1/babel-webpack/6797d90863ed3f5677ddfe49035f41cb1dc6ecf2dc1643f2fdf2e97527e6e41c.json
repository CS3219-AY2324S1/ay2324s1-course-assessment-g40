{"ast":null,"code":"var _class;\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nclass HttpRequestInterceptor {\n  intercept(req, next) {\n    req = req.clone({\n      withCredentials: true\n    });\n    return next.handle(req);\n  }\n}\n_class = HttpRequestInterceptor;\n_class.ɵfac = function HttpRequestInterceptor_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});\nexport { HttpRequestInterceptor };\nexport const httpInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: HttpRequestInterceptor,\n  multi: true\n}];","map":{"version":3,"names":["HTTP_INTERCEPTORS","HttpRequestInterceptor","intercept","req","next","clone","withCredentials","handle","factory","ɵfac","httpInterceptorProviders","provide","useClass","multi"],"sources":["C:\\Users\\Hong\\Desktop\\ay2324s1-course-assessment-g40\\frontend\\src\\app\\_helpers\\http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor,  HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = req.clone({ withCredentials: true });\r\n        return next.handle(req);\r\n    }\r\n}\r\n\r\nexport const httpInterceptorProviders = [{provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true}];\r\n\r\n"],"mappings":";AACA,SAAgEA,iBAAiB,QAAO,sBAAsB;;AAG9G,MACaC,sBAAsB;EAC/BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9CD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;IAC1C,OAAOF,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;EAC3B;;SAJSF,sBAAsB;;mBAAtBA,MAAsB;AAAA;;SAAtBA,MAAsB;EAAAO,OAAA,EAAtBP,MAAsB,CAAAQ;AAAA;SAAtBR,sBAAsB;AAOnC,OAAO,MAAMS,wBAAwB,GAAG,CAAC;EAACC,OAAO,EAAEX,iBAAiB;EAAEY,QAAQ,EAAEX,sBAAsB;EAAEY,KAAK,EAAE;AAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}